heatmap.plus(norm.combat.fc[names(sort(apply(norm.combat.fc,1,mad),decreasing=T)[1:500]),
c(colnames(Model.data),TCGA.normal,MYCTwist[,1])],
ColSideColors = cbind(c(ColsModel,rep('white',length(TCGA.normal)+nrow(MYCTwist))),
c(rep('white',ncol(Model.data)), rep('black',length(TCGA.normal)), rep('blue',nrow(MYCTwist)))),
col=greenred(50),
scale="row",
labRow="",
hclust=function(x) hclust(x,method="complete"),
distfun=function(x) as.dist((1-cor(t(x)))/2))
library('gplots')
library('heatmap.plus')
heatmap.plus(norm.combat.fc[names(sort(apply(norm.combat.fc,1,mad),decreasing=T)[1:500]),
c(colnames(Model.data),TCGA.normal,MYCTwist[,1])],
ColSideColors = cbind(c(ColsModel,rep('white',length(TCGA.normal)+nrow(MYCTwist))),
c(rep('white',ncol(Model.data)), rep('black',length(TCGA.normal)), rep('blue',nrow(MYCTwist)))),
col=greenred(50),
scale="row",
labRow="",labCol="",
hclust=function(x) hclust(x,method="complete"),
distfun=function(x) as.dist((1-cor(t(x)))/2))
library('gplots')
library('heatmap.plus')
pdf('~/Dropbox/HCC/MycTwistModels/TCGAModelCluster.pdf',height=3.5,width=3.5)
heatmap.plus(norm.combat.fc[names(sort(apply(norm.combat.fc,1,mad),decreasing=T)[1:500]),
c(colnames(Model.data),TCGA.normal,MYCTwist[,1])],
ColSideColors = cbind(c(ColsModel,rep('white',length(TCGA.normal)+nrow(MYCTwist))),
c(rep('white',ncol(Model.data)), rep('black',length(TCGA.normal)), rep('blue',nrow(MYCTwist)))),
col=greenred(50),
scale="row",
labRow="",labCol="",
hclust=function(x) hclust(x,method="complete"),
distfun=function(x) as.dist((1-cor(t(x)))/2))
dev.off()
read.table('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69_EXPRS.txt',
header=T,sep="\t") -> Exprs
read.table('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69_EXPRS.txt',
header=T,sep="\t",row.names=1) -> Exprs
read.table('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69_EXPRS.txt',
header=T,sep="\t") -> Exprs
levels(Exprs[,1])
duplicated(Exprs[,1])
Exprs[duplicated(Exprs[,1]),1]
table(Exprs[,1])
table(Exprs[,1])==2
table(Exprs[,1])>12
table(Exprs[,1])>1
names(which(table(Exprs[,1])>1
))
names(which(table(Exprs[,1])>1))
summary(table(Exprs[,1])
)
levels(Exprs[,1])
View(levels(Exprs[,1])
)
unique(Exprs[,1])
unique(as.character(Exprs[,1])
)
View(unique(as.character(Exprs[,1]))
)
is.na(Exprs[,1])
any(is.na(Exprs[,1])
)
Exprs <- Exprs[!is.na(Exprs[,1]),]
read.table('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69_EXPRS.txt',
header=T,sep="\t", stringsAsFactors = F) -> Exprs
Exprs <- Exprs[!is.na(Exprs[,1]),]
read.table('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69_EXPRS.txt',
header=T,sep="\t", stringsAsFactors = F) -> Exprs
dim(Exprs)
Exprs <- Exprs[!is.na(Exprs[,1]),]
dim(Exprs)
duplicated(Exprs[,1])
Exprs[duplicated(Exprs[,1]),1])
Exprs[duplicated(Exprs[,1]),1]
apply(Exprs[,2:ncol(Exprs)],2,function(x){tapply(x,Exprs[,1],mean)})
ExprsMatrix <- apply(Exprs[,2:ncol(Exprs)],2,function(x){tapply(x,Exprs[,1],mean)})
dim(ExprsMatrix)
dim(Exprs)
strtrim()
strtrim(' x ')
install.packages('stringr')
?gsub
gsub(" ","",Exprs[,1])
row.names(ExprsMatrix) <- gsub(' ','', row.names(ExprsMatrix))
ExprsMatrix
colnames(ExprsMatrix)
gsub("X",colnames(ExprsMatrix))
gsub("X",colnames(ExprsMatrix))
gsub("X","",colnames(ExprsMatrix))
gsub("\\.","",gsub("X","",colnames(ExprsMatrix)))
as.numeric(gsub("\\.","",gsub("X","",colnames(ExprsMatrix))))
as.numeric(gsub("\\.","",gsub("X","",colnames(ExprsMatrix))))>=100
ExprsMatrixNormal <- ExprsMatrix[,as.numeric(gsub("\\.","",gsub("X","",colnames(ExprsMatrix))))>=100]
ExprsMatrixNormal <- ExprsMatrix[,as.numeric(gsub("\\.","",gsub("X","",colnames(ExprsMatrix))))>=100]
ExprsMatrixTumor <- ExprsMatrix[,setdiff(colnames(ExprsMatrix),colnames(ExprsMatrixNormal))]
dim(ExprsMatrixNormal)
dim(ExprsMatrixTumor)
apply(ExprsMatrixNormal,1,mean)
ExprsMatrixTumor.Z <- sweep(ExprsMatrixTumor,1,apply(ExprsMatrixNormal,1,mean))
ExprsMatrixTumor.Z
ExprsMatrixTumor.Z <- sweep(ExprsMatrixTumor.Z,1,apply(ExprsMatrixNormal,1,sd),FUN="/")
summary(ExprsMatrixTumor.Z)
apply(ExprsMatrixNormal,1,sd)
pmax(apply(ExprsMatrixNormal,1,sd),0.1)
ExprsMatrixTumor.Z <- sweep(ExprsMatrixTumor,1,apply(ExprsMatrixNormal,1,mean))
ExprsMatrixTumor.Z <- sweep(ExprsMatrixTumor.Z,1,pmax(apply(ExprsMatrixNormal,1,sd),0.1),FUN="/")
summary(ExprsMatrixTumor.Z)
summary(apply(ExprsMatrixNormal,1,sd))
ExprsMatrixTumor.Z <- sweep(ExprsMatrixTumor.Z,1,apply(ExprsMatrixNormal,1,sd),FUN="/")
library(org.Hs.eg.db)
?select
keys(org.Hs.eg.db,'SYMBOL'
)
keys(org.Hs.eg.db,'SYMBOL')
select(org.Hs.eg.db,row.names(ExprsMatrixTumor.Z),column='ENTREZID',keytype = 'SYMBOL')
warnings()
GenesToEntrez <- select(org.Hs.eg.db,row.names(ExprsMatrixTumor.Z),column='ENTREZID',keytype = 'SYMBOL')
GenesToEntrez$SYMBOL
!duplicated(GenesToEntrez$SYMBOL)
GenesToEntrez <- GenesToEntrez[!duplicated(GenesToEntrez$SYMBOL),]
GenesToEntrez
?select
GenesToEntrez <- select(org.Hs.eg.db,row.names(ExprsMatrixTumor.Z),column='ENTREZID',
keytype = 'SYMBOL',multiVals='first')
GenesToEntrez
any(duplicated(GenesToEntrez[,'SYMBOL']))
mapIds <- select(org.Hs.eg.db,row.names(ExprsMatrixTumor.Z),column='ENTREZID',
keytype = 'SYMBOL',multiVals='first')
GenesToEntrez <- mapIds(org.Hs.eg.db,row.names(ExprsMatrixTumor.Z),column='ENTREZID',
keytype = 'SYMBOL',multiVals='first')
GenesToEntrez
row.names(ExprsMatrixTumor.Z) == names(GenesToEntrez)
all(row.names(ExprsMatrixTumor.Z) == names(GenesToEntrez)
)
ExprsMatrix.Z.Out <- data.frame("Hugo_Symbol"=row.names(ExprsMatrixTumor.Z),
"Entrez_Gene_Id"=GenesToEntrez,
ExprsMatrixTumor.Z)
View( ExprsMatrix.Z.Out)
ExprsMatrix.Z.Out <- data.frame("Hugo_Symbol"=row.names(ExprsMatrixTumor.Z),
"Entrez_Gene_Id"=GenesToEntrez,
ExprsMatrixTumor.Z, stringsAsFactors = F)
is.na(GenesToEntrez)
ExprsMatrix.Z.Out <- ExprsMatrix.Z.Out[!is.na(GenesToEntrez),]
ExprsMatrix.Z.Out <- data.frame("Hugo_Symbol"=row.names(ExprsMatrixTumor.Z),
"Entrez_Gene_Id"=GenesToEntrez,
ExprsMatrixTumor.Z, stringsAsFactors = F)
ExprsMatrix.Z.Out <- ExprsMatrix.Z.Out[!is.na(GenesToEntrez),]
View(ExprsMatrix.Z.Out )
View(ExprsMatrix.Z.Out )
View(ExprsMatrix.Z.Out )
colnames(ExprsMatrix.Z.Out) <- gsub("\\.","",colnames(ExprsMatrix.Z.Out))
View(ExprsMatrix.Z.Out)
write.table(,'~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/califano-portal-study/data_expression_median.txt')
write.table(ExprsMatrix.Z.Out,'~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/califano-portal-study/data_expression_median.txt',
row.names=F,sep="\t",quote=F)
read.table('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69_CNV.txt',
header=T,sep="\t",stringsAsFactors = F) -> CNA
colnames(CNA)
read.table('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69_CNV.txt',
header=T,sep="\t",stringsAsFactors = F) -> CNA
colnames(CNA) <- gsub("\\.","",colnames(CNA))
CNA <- CNA[!is.na(CNA$Gene),]
CNAMatrix <- apply(CNA[,2:ncol(CNA)],2,function(x){tapply(x,CNA[,1],mean)})
View(CNAMatrix)
row.names(CharacterList())
row.names(CNAMatrix)
CNAMatrixNormal <- CNAMatrix[,colnames(ExprsMatrixNormal)]
dim(CNAMatrixNormal)
CNAMatrixTumor <- CNAMatrix[,colnames(ExprsMatrixTumor)]
CNAMatrixTumor <- CNAMatrix[,setdiff(colnames(CNAMatrix),colnames(CNAMatrixNormal))]
CNAMatrixTumor.Z <- sweep(CNAMatrixTumor,1,apply(CNAMatrixNormal,1,mean))
summary(CNAMatrixTumor.Z )
summary(CNAMatrixTumor.Z)
GenesToEntrez <- mapIds(org.Hs.eg.db,row.names(CNAMatrixTumor.Z),column='ENTREZID',
keytype = 'SYMBOL',multiVals='first')
GenesToEntrez
CNAMatrix.Z.Out <- data.frame("Hugo_Symbol"=row.names(CNAMatrixTumor.Z),
"Entrez_Gene_Id"=GenesToEntrez,
CNAMatrixTumor.Z, stringsAsFactors = F)
CNAMatrix.Z.Out <- CNAMatrix.Z.Out[!is.na(GenesToEntrez),]
CNAMatrix.Z.Out
dim(CNAMatrix.Z.Out)
dim(CNAMatrixTumor.Z)
write.table(CNAMatrix.Z.Out,'~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/califano-portal-study/data_log2CNA.txt',
row.names=F,sep="\t",quote=F)
read.table('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69_Meth.txt',
header=T,sep="\t",stringsAsFactors = F) -> Meth
Meth
colnames(Meth) <- gsub("\\.","",colnames(Meth))
Meth <- CNA[!is.na(Meth$Gene),]
dim(Meth)
MethMatrix <- apply(Meth[,2:ncol(Meth)],2,function(x){tapply(x,Meth[,1],max)})
dim(MethMatrix)
MethMatrixTumor <- MethMatrix[,colnames(CNAMatrixTumor)]
dim(MethMatrixTumor)
GenesToEntrez <- mapIds(org.Hs.eg.db,row.names(MethMatrixTumor),column='ENTREZID',
keytype = 'SYMBOL',multiVals='first')
GenesToEntrez
MethMatrix.Out <- data.frame("Hugo_Symbol"=row.names(MethMatrixTumor),
"Entrez_Gene_Id"=GenesToEntrez,
MethMatrixTumor, stringsAsFactors = F)
MethMatrix.Out <- MethMatrix.Out[!is.na(GenesToEntrez),]
MethMatrix.Out
MethMatrix
Meth
read.table('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69_Meth.txt',
header=T,sep="\t",stringsAsFactors = F) -> Meth
colnames(Meth) <- gsub("\\.","",colnames(Meth))
Meth <- Meth[!is.na(Meth$Gene),]
MethMatrix <- apply(Meth[,2:ncol(Meth)],2,function(x){tapply(x,Meth[,1],max)})
MethMatrixTumor <- MethMatrix[,colnames(CNAMatrixTumor)]
GenesToEntrez <- mapIds(org.Hs.eg.db,row.names(MethMatrixTumor),column='ENTREZID',
keytype = 'SYMBOL',multiVals='first')
MethMatrix.Out <- data.frame("Hugo_Symbol"=row.names(MethMatrixTumor),
"Entrez_Gene_Id"=GenesToEntrez,
MethMatrixTumor, stringsAsFactors = F)
MethMatrix.Out <- MethMatrix.Out[!is.na(GenesToEntrez),]
read.table('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69_Meth.txt',
header=T,sep="\t",stringsAsFactors = F) -> Meth
Meth <- Meth[!is.na(Meth$Gene),]
Meth
write.table(MethMatrix.Out,
'~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/califano-portal-study/data_methylation_hm27.txt',
sep="\t",row.names=F,quote=F)
read.table('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69_Meth.txt',
header=T,sep="\t",stringsAsFactors = F) -> Meth
colnames(Meth) <- gsub("\\.","",colnames(Meth))
Meth <- Meth[!is.na(Meth$Gene),]
Meth
MethMatrix <- apply(Meth[,2:ncol(Meth)],2,function(x){tapply(x,Meth[,1],max)})
summary(MethMatrix)
MethMatrixTumor <- MethMatrix[,colnames(CNAMatrixTumor)]
summary(MethMatrixTumor)
source('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69.R', echo=TRUE)
MethMatrix.Out
MethMatrixTumor
GenesToEntrez <- mapIds(org.Hs.eg.db,row.names(MethMatrixTumor),column='ENTREZID',
keytype = 'SYMBOL',multiVals='first')
GenesToEntrez
max(sapply(GenesToEntrez,length))
GenesToEntrez <- sapply(GenesToEntrez,function(x){x[[1]]})
GenesToEntrez
GenesToEntrez <- sapply(GenesToEntrez,function(x){
if (all(is.na(x))) {return(NA)}
return(x[[1]])})
GenesToEntrez <- sapply(GenesToEntrez,function(x){
if (all(is.na(x))) {return(NA)}
return(x[[1]])})
GenesToEntrez
MethMatrix.Out <- data.frame("Hugo_Symbol"=row.names(MethMatrixTumor),
"Entrez_Gene_Id"=GenesToEntrez,
MethMatrixTumor, stringsAsFactors = F)
row.names(MethMatrixTumor)
GenesToEntrez
names(GenesToEntrez) == row.names(MethMatrixTumor)
all(names(GenesToEntrez) == row.names(MethMatrixTumor)
)
Meth$Gene
read.table('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69_Meth.txt',
header=T,sep="\t",stringsAsFactors = F) -> Meth
colnames(Meth) <- gsub("\\.","",colnames(Meth))
Meth <- Meth[!is.na(Meth$Gene) && Meth$Gene!="",]
MethMatrix <- apply(Meth[,2:ncol(Meth)],2,function(x){tapply(x,Meth[,1],max)})
MethMatrixTumor <- MethMatrix[,colnames(CNAMatrixTumor)]
GenesToEntrez <- mapIds(org.Hs.eg.db,row.names(MethMatrixTumor),column='ENTREZID',
keytype = 'SYMBOL',multiVals='first')
GenesToEntrez
GenesToEntrez <- sapply(GenesToEntrez,function(x){
if (all(is.na(x))) {return(NA)}
return(x[[1]])})
GenesToEntrez
MethMatrix.Out <- data.frame("Hugo_Symbol"=row.names(MethMatrixTumor),
"Entrez_Gene_Id"=GenesToEntrez,
MethMatrixTumor, stringsAsFactors = F)
MethMatrix <- MethMatrix[row.names(ExprsMatrix),]
dim(MethMatrix)
MethMatrix <- MethMatrix[intersect(row.names(MethMatrix),row.names(ExprsMatrix)),]
dim(MethMatrix)
MethMatrixTumor <- MethMatrix[,colnames(CNAMatrixTumor)]
GenesToEntrez <- mapIds(org.Hs.eg.db,row.names(MethMatrixTumor),column='ENTREZID',
keytype = 'SYMBOL',multiVals='first')
GenesToEntrez
MethMatrix.Out <- data.frame("Hugo_Symbol"=row.names(MethMatrixTumor),
"Entrez_Gene_Id"=GenesToEntrez,
MethMatrixTumor, stringsAsFactors = F)
MethMatrix.Out <- MethMatrix.Out[!is.na(GenesToEntrez),]
View( MethMatrix.Out )
source('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69.R', echo=TRUE)
rm(list=ls())
library('ggplot2')
library('gplots')
library('xlsx')
library('CoGAPS')
simplicityGENES <- function(As, Ps) {
# rescale p's to have max 1
pscale <- apply(Ps,1,max)
# rescale A in accordance with p's having max 1
As <- sweep(As, 2, pscale, FUN="*")
# find the A with the highest magnitude
Arowmax <- t(apply(As, 1, function(x) x/max(x)))
pmax <- apply(As, 1, max)
# determine which genes are most associated with each pattern
ssl <- matrix(NA, nrow=nrow(As), ncol=ncol(As),
dimnames=dimnames(As))
for (i in 1:ncol(As)) {
lp <- rep(0, ncol(As))
lp[i] <- 1
ssl.stat <- apply(Arowmax, 1, function(x) sqrt(t(x-lp)%*%(x-lp)))
ssl[order(ssl.stat),i] <- 1:length(ssl.stat)
}
return(ssl)
}
### get pathways
load(sprintf('/Users/ejfertig/Dropbox/HariData/CoGAPS_BRAF_p%d.Rda',4)) #load data
ISC <- read.xlsx('~/Dropbox/HariData/ISC lists.xls',sheetName='ISC genes', startRow=5, header=T,
stringsAsFators=F)
ISC <- setdiff(gsub('\\*','',levels(ISC$Gene)),"NA")
Prolif <- read.xlsx('~/Dropbox/HariData/ISC lists.xls',sheetName='Proliferation genes', startRow=5, header=T,
stringsAsFators=F)
Prolif <- setdiff(gsub('\\*','',levels(Prolif$Gene)),"NA")
LateTA <- read.xlsx('~/Dropbox/HariData/ISC lists.xls',sheetName='Late TA genes', startRow=5, header=T,
stringsAsFators=F)
LateTA <- setdiff(gsub('\\*','',levels(LateTA$Gene)),"NA")
LGR5 <- read.xlsx('~/Dropbox/HariData/ISC lists.xls',sheetName='Lgr5 genes', startRow=5, header=T,
stringsAsFators=F)
LGR5 <- setdiff(gsub('\\*','',levels(LGR5$Gene)),"NA")
pathways <- list(ISC=ISC,
Prolif=Prolif,
LateTA=LateTA,
LGR5=LGR5)
pathways <- sapply(pathways,
intersect,
toupper(sapply(strsplit(row.names(D),split="-"),function(x){x[[1]]})))
p <- 4
load(sprintf('/Users/ejfertig/Dropbox/HariData/CoGAPS_BRAF_p%d.Rda',p))
simGenes <- simplicityGENES(As=get(paste0('nP',p))$Amean,
Ps=get(paste0('nP',p))$Pmean)
ID <- colnames(get(paste0('nP',p))$Pmean)
Amean <- get(paste0('nP',p))$Amean
Asd <- get(paste0('nP',p))$Asd
if (any(row.names(Amean)!=row.names(Asd))) {
stop('Invalid Row names')
}
row.names(Amean) <- row.names(Asd) <- sapply(strsplit(toupper(row.names(Amean)),split="-"),function(x){x[[1]]})
pathwayStats <- calcCoGAPSStat(Amean = Amean, Asd=Asd,GStoGenes = pathways)
i <- 1
patternMarkers <- list()
patternMarkerStats <- matrix(NA, nrow=p, ncol=length(pathways),
dimnames=list(colnames(Amean),
names(pathways)))
sortSim <- names(sort(simGenes[,paste('Patt',i)],decreasing=F))
sortSim
geneThresh <- min(which(simGenes[sortSim,paste('Patt', i)] >
apply(simGenes[sortSim,],1,min)))
markerGenes <- sortSim[1:geneThresh]
markerGenes
length(markerGenes)
length(unique(markerGenes))
p <- 3
sortSim <- names(sort(simGenes[,paste('Patt',i)],decreasing=F))
geneThresh <- min(which(simGenes[sortSim,paste('Patt', i)] >
apply(simGenes[sortSim,],1,min)))
markerGenes <- sortSim[1:geneThresh]
markerGenes
sortSim <- names(sort(simGenes[,paste('Patt',i)],decreasing=F))
geneThresh <- min(which(simGenes[sortSim,paste('Patt', i)] >
apply(simGenes[sortSim,],1,min)))
markerGenes <- sortSim[1:geneThresh]
markerGenes
p
i <- 3
p <- 4
sortSim <- names(sort(simGenes[,paste('Patt',i)],decreasing=F))
geneThresh <- min(which(simGenes[sortSim,paste('Patt', i)] >
apply(simGenes[sortSim,],1,min)))
markerGenes <- sortSim[1:geneThresh]
markerGenes
rm(list=ls()
)
load('~/Dropbox/HariData/CoGAPSSummariesStats_nP4.Rda')
ls()
patternMarkers
GSStats
patternMarkers
patternMarkerStats
GSStats
patternMarkerStats
markerGenes
patternMarkers[[1]]
patternMarkers
rm(list=ls())
### format gene expression data
read.table('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69_EXPRS.txt',
header=T,sep="\t", stringsAsFactors = F) -> Exprs
Exprs <- Exprs[!is.na(Exprs[,1]),]
ExprsMatrix <- apply(Exprs[,2:ncol(Exprs)],2,function(x){tapply(x,Exprs[,1],mean)})
row.names(ExprsMatrix) <- gsub(' ','', row.names(ExprsMatrix))
ExprsMatrixNormal <- ExprsMatrix[,as.numeric(gsub("\\.","",gsub("X","",colnames(ExprsMatrix))))>=100]
ExprsMatrixTumor <- ExprsMatrix[,setdiff(colnames(ExprsMatrix),colnames(ExprsMatrixNormal))]
ExprsMatrixTumor.Z <- sweep(ExprsMatrixTumor,1,apply(ExprsMatrixNormal,1,mean))
ExprsMatrixTumor.Z <- sweep(ExprsMatrixTumor.Z,1,apply(ExprsMatrixNormal,1,sd),FUN="/")
library(org.Hs.eg.db)
GenesToEntrez <- mapIds(org.Hs.eg.db,row.names(ExprsMatrixTumor.Z),column='ENTREZID',
keytype = 'SYMBOL',multiVals='first')
ExprsMatrix.Z.Out <- data.frame("Hugo_Symbol"=row.names(ExprsMatrixTumor.Z),
"Entrez_Gene_Id"=GenesToEntrez,
ExprsMatrixTumor.Z, stringsAsFactors = F)
ExprsMatrix.Z.Out <- ExprsMatrix.Z.Out[!is.na(GenesToEntrez),]
colnames(ExprsMatrix.Z.Out) <- gsub("\\.","",colnames(ExprsMatrix.Z.Out))
write.table(ExprsMatrix.Z.Out,'~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/califano-portal-study/data_expression_median.txt',
row.names=F,sep="\t",quote=F)
### format log2 CNA data
read.table('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69_CNV.txt',
header=T,sep="\t",stringsAsFactors = F) -> CNA
colnames(CNA) <- gsub("\\.","",colnames(CNA))
CNA <- CNA[!is.na(CNA$Gene),]
CNAMatrix <- apply(CNA[,2:ncol(CNA)],2,function(x){tapply(x,CNA[,1],mean)})
CNAMatrixNormal <- CNAMatrix[,colnames(ExprsMatrixNormal)]
CNAMatrixTumor <- CNAMatrix[,setdiff(colnames(CNAMatrix),colnames(CNAMatrixNormal))]
CNAMatrixTumor.Z <- sweep(CNAMatrixTumor,1,apply(CNAMatrixNormal,1,mean))
CNAMatrixTumor.Z <- sweep(CNAMatrixTumor.Z,1,apply(CNAMatrixNormal,1,sd),FUN="/")
GenesToEntrez <- mapIds(org.Hs.eg.db,row.names(CNAMatrixTumor.Z),column='ENTREZID',
keytype = 'SYMBOL',multiVals='first')
CNAMatrix.Z.Out <- data.frame("Hugo_Symbol"=row.names(CNAMatrixTumor.Z),
"Entrez_Gene_Id"=GenesToEntrez,
CNAMatrixTumor.Z, stringsAsFactors = F)
CNAMatrix.Z.Out <- CNAMatrix.Z.Out[!is.na(GenesToEntrez),]
write.table(CNAMatrix.Z.Out,'~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/califano-portal-study/data_log2CNA.txt',
row.names=F,sep="\t",quote=F)
### format DNA methylation data
read.table('~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/RawData/HNSCC69_Meth.txt',
header=T,sep="\t",stringsAsFactors = F) -> Meth
colnames(Meth) <- gsub("\\.","",colnames(Meth))
Meth <- Meth[!is.na(Meth$Gene) && Meth$Gene!="",]
MethMatrix <- apply(Meth[,2:ncol(Meth)],2,function(x){tapply(x,Meth[,1],max)})
MethMatrix <- MethMatrix[intersect(row.names(MethMatrix),row.names(ExprsMatrix)),]
MethMatrixTumor <- MethMatrix[,colnames(CNAMatrixTumor)]
GenesToEntrez <- mapIds(org.Hs.eg.db,row.names(MethMatrixTrumor),column='ENTREZID',
keytype = 'SYMBOL',multiVals='first')
MethMatrix.Out <- data.frame("Hugo_Symbol"=row.names(MethMatrixTumor),
"Entrez_Gene_Id"=GenesToEntrez,
MethMatrixTumor, stringsAsFactors = F)
MethMatrix.Out <- MethMatrix.Out[!is.na(GenesToEntrez),]
write.table(MethMatrix.Out,
'~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/califano-portal-study/data_methylation_hm27.txt',
sep="\t",row.names=F,quote=F)
MethMatrix
MethMatrixTumor
GenesToEntrez <- mapIds(org.Hs.eg.db,row.names(MethMatrixTrumor),column='ENTREZID',
keytype = 'SYMBOL',multiVals='first')
GenesToEntrez <- mapIds(org.Hs.eg.db,row.names(MethMatrixTumor),column='ENTREZID',
keytype = 'SYMBOL',multiVals='first')
MethMatrix.Out <- data.frame("Hugo_Symbol"=row.names(MethMatrixTumor),
"Entrez_Gene_Id"=GenesToEntrez,
MethMatrixTumor, stringsAsFactors = F)
MethMatrix.Out <- MethMatrix.Out[!is.na(GenesToEntrez),]
write.table(MethMatrix.Out,
'~/Documents/Data/Hopkins_Analysis_Projects/Fertig/SPOREPilot/califano-portal-study/data_methylation_hm27.txt',
sep="\t",row.names=F,quote=F)
colnames(MethMatrixTumor)
setdiff(paste0('X',1:50),colnames(MethMatrixTumor))
setwd('..')
library('ProjectTemplate')
load.project()
getwd()
setwd('~/Dropbox/K25_Fertig/HaCaTFeedbackAnalysis/')
library('ProjectTemplate')
load.project()
load('data/TRANSFAC_Genes_2014.Rda')
TF2Gene <- lapply(TF2Gene,intersect,row.names(CoGAPS_SDFIVE_3$Amean))
TF2Gene <- TF2Gene[sapply(TF2Gene,length)>=5]
TF2Gene <- TF2Gene[sapply(TF2Gene,length)<100]
TF2Gene
reverseSplit(TF2Gene)
TF2Gene
TF2Gene
TF2GeneTable <- matrix(F,nrow=nrow(CoGAPS_SDFIVE_3$Amean),
ncol=length(TF2Gene),
dimnames = list(row.names(CoGAPS_SDFIVE_3$Amean),
names(TF2Gene)))
# format TF2 gene list for output
TF2GeneTable <- matrix(F,nrow=nrow(CoGAPS_SDFIVE_3$Amean),
ncol=length(TF2Gene),
dimnames = list(row.names(CoGAPS_SDFIVE_3$Amean),
names(TF2Gene)))
for (tf in names(TF2Gene)) {
TF2GeneTable[TF2Gene[[tf]],tf] <- T
}
TF2GeneTable
apply(TF2GeneTable,1,all)
apply(TF2GeneTable,1,any)
apply(TF2GeneTable,1,any)
!apply(TF2GeneTable,1,any)
apply(TF2GeneTable,1,any)
TF2GeneTable <- TF2GeneTable[apply(TF2GeneTable,1,any),]
TF2GeneTable
dim(TF2GeneTable)
write.table(data.frame(Gene=row.names(TF2GeneTable),
TF2GeneTable),
file='reports/TF2GeneSelection.txt',sep="\t",quote=F,row.names=F)
# format TF2 gene list for output
TF2GeneTable <- matrix(F,nrow=nrow(CoGAPS_SDFIVE_3$Amean),
ncol=length(TF2Gene),
dimnames = list(row.names(CoGAPS_SDFIVE_3$Amean),
names(TF2Gene)))
for (tf in names(TF2Gene)) {
TF2GeneTable[TF2Gene[[tf]],tf] <- T
}
write.table(data.frame(Gene=row.names(TF2GeneTable),
TF2GeneTable),
file='reports/TF2GeneSelection.txt',sep="\t",quote=F,row.names=F)
dim(TF2GeneTable)
